Namespace(batch_size=16, debug=True, epochs=3000, latent_size=512, log_interval=20, lr=0.01, name='default', sample_num=1024, seed=8842, weight_file='')
gt: torch.Size([1024, 3]) torch.Size([1, 1024, 3])
gen: torch.Size([1024, 3]) torch.Size([1, 1024, 3])
gt: torch.Size([1024, 3]) torch.Size([2, 1024, 3])
gen: torch.Size([1024, 3]) torch.Size([2, 1024, 3])
gt: torch.Size([1024, 3]) torch.Size([3, 1024, 3])
gen: torch.Size([1024, 3]) torch.Size([3, 1024, 3])
Traceback (most recent call last):
  File "./train.py", line 36, in <module>
    dataset = ModelNet_aligned('dataset/modelnet40_off_aligned',device,mode='train',downsample_num=opt.sample_num)
  File "/home/mmvc/mmvc-ny-local/local-001/Yi_Shi/bk3/LatentDisc/data/dataloader.py", line 72, in __init__
    pc = read_off(file_name,downsample_num).to(device)
  File "/home/mmvc/mmvc-ny-local/local-001/Yi_Shi/bk3/LatentDisc/data/dataloader.py", line 38, in read_off
    indeces = random.sample(range(len(verts)),sample_num);
  File "/home/mmvc/.conda/envs/ys/lib/python3.6/random.py", line 320, in sample
    raise ValueError("Sample larger than population or is negative")
ValueError: Sample larger than population or is negative
